# Generated by Django 4.2.14 on 2024-10-03 04:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("share", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=13, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("male", "MALE"), ("female", "FEMALE")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_active": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "db_table": "user",
                "ordering": ["-created_at"],
                "permissions": [
                    ("view_all_users", "Can view all users"),
                    ("view_user_me", "Can view user me"),
                    ("change_user_me", "Can change user me"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SellerUser",
            fields=[
                (
                    "baseuserinfo_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="share.baseuserinfo",
                    ),
                ),
                ("company", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seller_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=("share.baseuserinfo",),
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("buyer_policy", "BUYER_POLICY"),
                            ("seller_policy", "SELLER_POLICY"),
                            ("admin_policy", "ADMIN_POLICY"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_active": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("permissions", models.ManyToManyField(to="auth.permission")),
            ],
            options={
                "verbose_name": "Policy",
                "verbose_name_plural": "Policies",
                "db_table": "policy",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=150, unique=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_active": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="custom_group",
                        to="auth.permission",
                        verbose_name="permissions",
                    ),
                ),
                ("policies", models.ManyToManyField(blank=True, to="user.policy")),
            ],
            options={
                "verbose_name": "Group",
                "db_table": "group",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name="BuyerUser",
            fields=[
                (
                    "baseuserinfo_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="share.baseuserinfo",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=("share.baseuserinfo",),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="user.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="policies",
            field=models.ManyToManyField(blank=True, to="user.policy"),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddIndex(
            model_name="policy",
            index=django.contrib.postgres.indexes.HashIndex(
                fields=["name"], name="policy_name_hash_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="policy",
            constraint=models.UniqueConstraint(
                fields=("name", "is_active"), name="policy_unique_name_is_active"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=django.contrib.postgres.indexes.HashIndex(
                fields=["first_name"], name="user_first_name_hash_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=django.contrib.postgres.indexes.HashIndex(
                fields=["last_name"], name="user_last_name_hash_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["phone_number"], name="user_phone_number_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="user_email_idx"),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.CheckConstraint(
                check=models.Q(("email", None), ("phone_number", None), _negated=True),
                name="check_email_or_phone_number",
            ),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.UniqueConstraint(fields=("id",), name="unique_user_id"),
        ),
    ]
